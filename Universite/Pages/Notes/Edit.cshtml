@page
@model Universite.Pages.Notes.EditModel

@{
    ViewData["Title"] = "Edit";
}

<h1>Saisie</h1>

<h4>Saisie des notes</h4>

<div class="row">
    <div class="col-md-4">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            @*<input type="hidden" asp-for="Enseigner.LEnseignantID" value="@Model.Enseignant.ID" />*@
            <div class="form-group">
                <label asp-for="Enseigner.LUEID" class="control-label">Selectionnez l'UE</label>
                <select asp-for="Enseigner.LUEID" class="form-control" asp-items="ViewBag.LUEID"></select>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" asp-page-handler="First"/>
                @*<a asp-page="./Index" asp-route-id="@Model.Enseignant.ID">Retour à l'enseignant</a>*@
            </div>
        </form>
    </div>
</div>


<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Etudiant[0].Nom)
                @Html.DisplayNameFor(model => model.Etudiant[0].Prenom)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Etudiant[0].FormationSuivie)
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Etudiant)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Nom)

                    @Html.DisplayFor(modelItem => item.Prenom)
                </td>
                <th>
                    @Html.DisplayFor(modelItem => item.FormationSuivie.Intitule)
                </th>

            </tr>
        }
    </tbody>
</table>



@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
